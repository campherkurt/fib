docker run kurt/client

> client@0.1.0 test /app
> react-scripts test --env=jsdom

/app/node_modules/react-scripts/scripts/test.js:20
  throw err;
  ^

Error: Network Error
    at createError (/app/node_modules/axios/lib/core/createError.js:16:15)
    at XMLHttpRequest.handleError [as onerror] (/app/node_modules/axios/lib/adapters/xhr.js:87:14)
    at XMLHttpRequest.callback.<computed> (/app/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:289:32)
    at invokeEventListeners (/app/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:219:27)
    at invokeInlineListeners (/app/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:166:7)
    at EventTargetImpl._dispatch (/app/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:122:7)
    at EventTargetImpl.dispatchEvent (/app/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:87:17)
    at XMLHttpRequest.dispatchEvent (/app/node_modules/jsdom/lib/jsdom/living/generated/EventTarget.js:61:35)
    at XMLHttpRequest.abort (/app/node_modules/jsdom/lib/jsdom/living/xmlhttprequest.js:405:16)
    at Object.abort (/app/node_modules/jsdom/lib/jsdom/living/xhr-utils.js:315:13)
    at RequestManager.close (/app/node_modules/jsdom/lib/jsdom/living/nodes/Document-impl.js:146:21)
    at Window.close (/app/node_modules/jsdom/lib/jsdom/browser/Window.js:362:29)
    at JSDOMEnvironment.dispose (/app/node_modules/jest-environment-jsdom/build/index.js:44:19)
    at /app/node_modules/jest/node_modules/jest-cli/build/runTest.js:102:17
    at processTicksAndRejections (internal/process/task_queues.js:93:5) {
  config: {
    adapter: [Function: xhrAdapter],
    transformRequest: { '0': [Function: transformRequest] },
    transformResponse: { '0': [Function: transformResponse] },
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    validateStatus: [Function: validateStatus],
    headers: { Accept: 'application/json, text/plain, */*' },
    method: 'get',
    url: '/api/values/current',
    data: undefined
  },
  request: <ref *6> XMLHttpRequest {
    onabort: null,
    onerror: [Function: handleError] {
      [Symbol(inline event listener wrapper)]: [Function (anonymous)]
    },
    onload: null,
    onloadend: null,
    onloadstart: null,
    onprogress: null,
    ontimeout: [Function: handleTimeout],
    upload: <ref *5> XMLHttpRequestUpload {
      onabort: null,
      onerror: null,
      onload: null,
      onloadend: null,
      onloadstart: null,
      onprogress: null,
      ontimeout: null,
      _ownerDocument: <ref *4> Document {
        location: [Getter/Setter],
        [Symbol(impl)]: <ref *1> DocumentImpl {
          _eventListeners: [Object: null prototype] {},
          _core: {
            DOMException: [Function],
            NamedNodeMap: [Function: NamedNodeMap],
            Attr: [Function: Attr],
            Node: [Function],
            Element: [Function: Element],
            DocumentFragment: [Function: DocumentFragment],
            HTMLDocument: [Function: Document],
            Document: [Function: Document],
            XMLDocument: [Function: XMLDocument],
            CharacterData: [Function: CharacterData],
            Text: [Function: Text],
            CDATASection: [Function: CDATASection],
            ProcessingInstruction: [Function: ProcessingInstruction],
            Comment: [Function: Comment],
            DocumentType: [Function: DocumentType],
            DOMImplementation: [Function: DOMImplementation],
            Event: [Function],
            CustomEvent: [Function: CustomEvent],
            MessageEvent: [Function: MessageEvent],
            ErrorEvent: [Function: ErrorEvent],
            HashChangeEvent: [Function: HashChangeEvent],
            FocusEvent: [Function: FocusEvent],
            PopStateEvent: [Function: PopStateEvent],
            UIEvent: [Function: UIEvent],
            MouseEvent: [Function: MouseEvent],
            KeyboardEvent: [Function],
            TouchEvent: [Function: TouchEvent],
            ProgressEvent: [Function: ProgressEvent],
            EventTarget: [Function: EventTarget],
            Location: [Function: Location],
            History: [Function: History],
            Blob: [Function: Blob],
            File: [Function: File],
            FileList: [Function: FileList],
            DOMParser: [Function: DOMParser],
            FormData: [Function: FormData],
            HTMLElement: [Function: HTMLElement],
            HTMLAnchorElement: [Function: HTMLAnchorElement],
            HTMLAppletElement: [Function: HTMLAppletElement],
            HTMLAreaElement: [Function: HTMLAreaElement],
            HTMLAudioElement: [Function: HTMLAudioElement],
            HTMLBaseElement: [Function: HTMLBaseElement],
            HTMLBodyElement: [Function: HTMLBodyElement],
            HTMLBRElement: [Function: HTMLBRElement],
            HTMLButtonElement: [Function: HTMLButtonElement],
            HTMLCanvasElement: [Function: HTMLCanvasElement],
            HTMLDataElement: [Function: HTMLDataElement],
            HTMLDataListElement: [Function: HTMLDataListElement],
            HTMLDialogElement: [Function: HTMLDialogElement],
            HTMLDirectoryElement: [Function: HTMLDirectoryElement],
            HTMLDivElement: [Function: HTMLDivElement],
            HTMLDListElement: [Function: HTMLDListElement],
            HTMLEmbedElement: [Function: HTMLEmbedElement],
            HTMLFieldSetElement: [Function: HTMLFieldSetElement],
            HTMLFontElement: [Function: HTMLFontElement],
            HTMLFormElement: [Function: HTMLFormElement],
            HTMLFrameElement: [Function: HTMLFrameElement],
            HTMLFrameSetElement: [Function: HTMLFrameSetElement],
            HTMLHeadingElement: [Function: HTMLHeadingElement],
            HTMLHeadElement: [Function: HTMLHeadElement],
            HTMLHRElement: [Function: HTMLHRElement],
            HTMLHtmlElement: [Function: HTMLHtmlElement],
            HTMLIFrameElement: [Function: HTMLIFrameElement],
            HTMLImageElement: [Function: HTMLImageElement],
            HTMLInputElement: [Function: HTMLInputElement],
            HTMLLabelElement: [Function: HTMLLabelElement],
            HTMLLegendElement: [Function: HTMLLegendElement],
            HTMLLIElement: [Function: HTMLLIElement],
            HTMLLinkElement: [Function: HTMLLinkElement],
            HTMLMapElement: [Function: HTMLMapElement],
            HTMLMediaElement: [Function],
            HTMLMenuElement: [Function: HTMLMenuElement],
            HTMLMetaElement: [Function: HTMLMetaElement],
            HTMLMeterElement: [Function: HTMLMeterElement],
            HTMLModElement: [Function: HTMLModElement],
            HTMLObjectElement: [Function: HTMLObjectElement],
            HTMLOListElement: [Function: HTMLOListElement],
            HTMLOptGroupElement: [Function: HTMLOptGroupElement],
            HTMLOptionElement: [Function: HTMLOptionElement],
            HTMLOutputElement: [Function: HTMLOutputElement],
            HTMLParagraphElement: [Function: HTMLParagraphElement],
            HTMLParamElement: [Function: HTMLParamElement],
            HTMLPreElement: [Function: HTMLPreElement],
            HTMLProgressElement: [Function: HTMLProgressElement],
            HTMLQuoteElement: [Function: HTMLQuoteElement],
            HTMLScriptElement: [Function: HTMLScriptElement],
            HTMLSelectElement: [Function: HTMLSelectElement],
            HTMLSourceElement: [Function: HTMLSourceElement],
            HTMLSpanElement: [Function: HTMLSpanElement],
            HTMLStyleElement: [Function: HTMLStyleElement],
            HTMLTableCaptionElement: [Function: HTMLTableCaptionElement],
            HTMLTableCellElement: [Function: HTMLTableCellElement],
            HTMLTableColElement: [Function: HTMLTableColElement],
            HTMLTableDataCellElement: [Function: HTMLTableDataCellElement],
            HTMLTableElement: [Function: HTMLTableElement],
            HTMLTableHeaderCellElement: [Function: HTMLTableHeaderCellElement],
            HTMLTimeElement: [Function: HTMLTimeElement],
            HTMLTitleElement: [Function: HTMLTitleElement],
            HTMLTableRowElement: [Function: HTMLTableRowElement],
            HTMLTableSectionElement: [Function: HTMLTableSectionElement],
            HTMLTemplateElement: [Function: HTMLTemplateElement],
            HTMLTextAreaElement: [Function: HTMLTextAreaElement],
            HTMLTrackElement: [Function],
            HTMLUListElement: [Function: HTMLUListElement],
            HTMLUnknownElement: [Function: HTMLUnknownElement],
            HTMLVideoElement: [Function: HTMLVideoElement],
            StyleSheet: [Function: StyleSheet],
            MediaList: [Function: MediaList],
            CSSStyleSheet: [Function: CSSStyleSheet],
            CSSRule: [Function],
            CSSStyleRule: [Function],
            CSSMediaRule: [Function: CSSMediaRule],
            CSSImportRule: [Function: CSSImportRule],
            CSSStyleDeclaration: [Function: CSSStyleDeclaration],
            StyleSheetList: [Function: StyleSheetList],
            XPathException: [Function],
            XPathExpression: [Function: XPathExpression],
            XPathResult: [Function],
            XPathEvaluator: [Function: XPathEvaluator],
            HTMLCollection: [class HTMLCollection],
            NodeFilter: [Function],
            NodeIterator: [Function: NodeIterator],
            NodeList: [class NodeList],
            XMLHttpRequestEventTarget: [Function: XMLHttpRequestEventTarget],
            XMLHttpRequestUpload: [class XMLHttpRequestUpload extends XMLHttpRequestEventTarget],
            DOMTokenList: [class DOMTokenList],
            URL: [Function: URL],
            Window: [Function: Window]
          },
          _ownerDocument: [Circular *1],
          _childNodesList: null,
          _childrenList: null,
          _version: 2,
          _memoizedQueries: { '6': [Object: null prototype] },
          nodeType: 9,
          _parsingMode: 'html',
          _htmlToDom: HtmlToDom {
            core: [Object],
            parser: [Object],
            parsingMode: 'html',
            parserType: 'parse5v1'
          },
          _implementation: DOMImplementationImpl {
            core: [Object],
            _ownerDocument: [Circular *1],
            _features: [Object: null prototype],
            [Symbol(wrapper)]: [DOMImplementation]
          },
          _defaultView: <ref *2> Window {
            _core: [Object],
            _globalProxy: [Circular *2],
            __timers: [Object: null prototype] {},
            _top: [Window],
            _parent: [Window],
            _frameElement: null,
            _sessionHistory: [Array],
            _currentSessionHistoryEntryIndex: 0,
            _length: 0,
            _virtualConsole: [VirtualConsole],
            length: [Getter],
            window: [Getter],
            frameElement: [Getter],
            frames: [Getter],
            self: [Getter],
            parent: [Getter],
            top: [Getter],
            document: [Getter],
            location: [Getter],
            history: [Getter],
            navigator: [Getter],
            addEventListener: [Function: bound addEventListener],
            removeEventListener: [Function: bound removeEventListener],
            dispatchEvent: [Function: bound dispatchEvent],
            setTimeout: [Function (anonymous)],
            setInterval: [Function (anonymous)],
            clearInterval: [Function: bound stopTimer],
            clearTimeout: [Function: bound stopTimer],
            __stopAllTimers: [Function: bound stopAllTimers],
            postMessage: [Function (anonymous)],
            atob: [Function (anonymous)],
            btoa: [Function (anonymous)],
            FileReader: [Function],
            XMLHttpRequest: [Function],
            ArrayBuffer: [Function: ArrayBuffer],
            Int8Array: [Function: Int8Array],
            Uint8Array: [Function: Uint8Array],
            Uint8ClampedArray: [Function: Uint8ClampedArray],
            Int16Array: [Function: Int16Array],
            Uint16Array: [Function: Uint16Array],
            Int32Array: [Function: Int32Array],
            Uint32Array: [Function: Uint32Array],
            Float32Array: [Function: Float32Array],
            Float64Array: [Function: Float64Array],
            stop: [Function (anonymous)],
            close: [Function (anonymous)],
            getComputedStyle: [Function (anonymous)],
            console: [CustomConsole],
            name: 'nodejs',
            innerWidth: 1024,
            innerHeight: 768,
            outerWidth: 1024,
            outerHeight: 768,
            pageXOffset: 0,
            pageYOffset: 0,
            screenX: 0,
            screenY: 0,
            screenLeft: 0,
            screenTop: 0,
            scrollX: 0,
            scrollY: 0,
            scrollTop: 0,
            scrollLeft: 0,
            screen: [Object],
            alert: [Function (anonymous)],
            blur: [Function (anonymous)],
            confirm: [Function (anonymous)],
            createPopup: [Function (anonymous)],
            focus: [Function (anonymous)],
            moveBy: [Function (anonymous)],
            moveTo: [Function (anonymous)],
            open: [Function (anonymous)],
            print: [Function (anonymous)],
            prompt: [Function (anonymous)],
            resizeBy: [Function (anonymous)],
            resizeTo: [Function (anonymous)],
            scroll: [Function (anonymous)],
            scrollBy: [Function (anonymous)],
            scrollTo: [Function (anonymous)],
            toString: [Function: toString],
            Buffer: [Function],
            process: [Object],
            setImmediate: [Function],
            clearImmediate: [Function: clearImmediate],
            mockRunTicksRepeatedly: [Function: bound runAllTicks],
            mockRunTimersOnce: [Function: bound runOnlyPendingTimers],
            mockRunTimersToTime: [Function: bound runTimersToTime],
            mockRunTimersRepeatedly: [Function: bound runAllTimers],
            mockClearTimers: [Function: bound clearAllTimers],
            mockGetTimersCount: [Function (anonymous)],
            Headers: [Function: Headers],
            Request: [Function: Request],
            Response: [Function],
            fetch: [Function],
            requestAnimationFrame: [Function: raf],
            cancelAnimationFrame: [Function: caf],
            describe: [Function],
            xdescribe: [Function: xdescribe],
            fdescribe: [Function: fdescribe],
            it: [Function],
            xit: [Function: xit],
            fit: [Function],
            beforeEach: [Function: beforeEach],
            afterEach: [Function: afterEach],
            beforeAll: [Function: beforeAll],
            afterAll: [Function: afterAll],
            pending: [Function: pending],
            fail: [Function: fail],
            spyOn: [Function: spyOn],
            jsApiReporter: [JsApiReporter],
            jasmine: [Object],
            test: [Function],
            xtest: [Function: xit],
            expect: [Function]
          },
          _global: <ref *3> Window {
            _core: [Object],
            _globalProxy: [Window],
            __timers: [Object: null prototype] {},
            _top: [Circular *3],
            _parent: [Circular *3],
            _frameElement: null,
            _sessionHistory: [Array],
            _currentSessionHistoryEntryIndex: 0,
            _length: 0,
            _virtualConsole: [VirtualConsole],
            length: [Getter],
            window: [Getter],
            frameElement: [Getter],
            frames: [Getter],
            self: [Getter],
            parent: [Getter],
            top: [Getter],
            document: [Getter],
            location: [Getter],
            history: [Getter],
            navigator: [Getter],
            addEventListener: [Function: bound addEventListener],
            removeEventListener: [Function: bound removeEventListener],
            dispatchEvent: [Function: bound dispatchEvent],
            setTimeout: [Function (anonymous)],
            setInterval: [Function (anonymous)],
            clearInterval: [Function: bound stopTimer],
            clearTimeout: [Function: bound stopTimer],
            __stopAllTimers: [Function: bound stopAllTimers],
            postMessage: [Function (anonymous)],
            atob: [Function (anonymous)],
            btoa: [Function (anonymous)],
            FileReader: [Function],
            XMLHttpRequest: [Function],
            ArrayBuffer: [Function: ArrayBuffer],
            Int8Array: [Function: Int8Array],
            Uint8Array: [Function: Uint8Array],
            Uint8ClampedArray: [Function: Uint8ClampedArray],
            Int16Array: [Function: Int16Array],
            Uint16Array: [Function: Uint16Array],
            Int32Array: [Function: Int32Array],
            Uint32Array: [Function: Uint32Array],
            Float32Array: [Function: Float32Array],
            Float64Array: [Function: Float64Array],
            stop: [Function (anonymous)],
            close: [Function (anonymous)],
            getComputedStyle: [Function (anonymous)],
            console: [CustomConsole],
            name: 'nodejs',
            innerWidth: 1024,
            innerHeight: 768,
            outerWidth: 1024,
            outerHeight: 768,
            pageXOffset: 0,
            pageYOffset: 0,
            screenX: 0,
            screenY: 0,
            screenLeft: 0,
            screenTop: 0,
            scrollX: 0,
            scrollY: 0,
            scrollTop: 0,
            scrollLeft: 0,
            screen: [Object],
            alert: [Function (anonymous)],
            blur: [Function (anonymous)],
            confirm: [Function (anonymous)],
            createPopup: [Function (anonymous)],
            focus: [Function (anonymous)],
            moveBy: [Function (anonymous)],
            moveTo: [Function (anonymous)],
            open: [Function (anonymous)],
            print: [Function (anonymous)],
            prompt: [Function (anonymous)],
            resizeBy: [Function (anonymous)],
            resizeTo: [Function (anonymous)],
            scroll: [Function (anonymous)],
            scrollBy: [Function (anonymous)],
            scrollTo: [Function (anonymous)],
            toString: [Function: toString],
            Buffer: [Function],
            process: [Object],
            setImmediate: [Function],
            clearImmediate: [Function: clearImmediate],
            mockRunTicksRepeatedly: [Function: bound runAllTicks],
            mockRunTimersOnce: [Function: bound runOnlyPendingTimers],
            mockRunTimersToTime: [Function: bound runTimersToTime],
            mockRunTimersRepeatedly: [Function: bound runAllTimers],
            mockClearTimers: [Function: bound clearAllTimers],
            mockGetTimersCount: [Function (anonymous)],
            Headers: [Function: Headers],
            Request: [Function: Request],
            Response: [Function],
            fetch: [Function],
            requestAnimationFrame: [Function: raf],
            cancelAnimationFrame: [Function: caf],
            describe: [Function],
            xdescribe: [Function: xdescribe],
            fdescribe: [Function: fdescribe],
            it: [Function],
            xit: [Function: xit],
            fit: [Function],
            beforeEach: [Function: beforeEach],
            afterEach: [Function: afterEach],
            beforeAll: [Function: beforeAll],
            afterAll: [Function: afterAll],
            pending: [Function: pending],
            fail: [Function: fail],
            spyOn: [Function: spyOn],
            jsApiReporter: [JsApiReporter],
            jasmine: [Object],
            test: [Function],
            xtest: [Function: xit],
            expect: [Function],
            [Symbol(impl)]: [EventTargetImpl],
            [Symbol()]: [NamedPropertiesTracker]
          },
          _documentElement: HTMLHtmlElementImpl {
            _eventListeners: [Object: null prototype] {},
            _core: [Object],
            _ownerDocument: [Circular *1],
            _childNodesList: null,
            _childrenList: null,
            _version: 4,
            _memoizedQueries: {},
            nodeType: 1,
            scrollTop: 0,
            scrollLeft: 0,
            _namespaceURI: 'http://www.w3.org/1999/xhtml',
            _prefix: null,
            _localName: 'html',
            _attributes: [NamedNodeMap],
            _tabIndex: 0,
            _settingCssText: false,
            _clickInProgress: false,
            _style: [CSSStyleDeclaration],
            _attached: true,
            [Symbol(DOM SymbolTree)]: [SymbolTreeNode],
            [Symbol(wrapper)]: [HTMLHtmlElement],
            [Symbol(location info)]: [Object]
          },
          _ids: [Object: null prototype] {},
          _attached: true,
          _currentScript: null,
          _cookieJar: CookieJar {
            enableLooseMode: true,
            store: [MemoryCookieStore]
          },
          _contentType: undefined,
          _encoding: 'UTF-8',
          _URL: {
            scheme: 'http',
            username: '',
            password: '',
            host: 'localhost',
            port: null,
            path: [Array],
            query: null,
            fragment: null,
            cannotBeABaseURL: false
          },
          _origin: 'http://localhost',
          _location: LocationImpl {
            _relevantDocument: [Circular *1],
            url: null,
            [Symbol(wrapper)]: [Location]
          },
          _history: HistoryImpl {
            _window: [Window],
            _document: [Circular *1],
            _actAsIfLocationReloadCalled: [Function: actAsIfLocationReloadCalled],
            _state: null,
            _latestEntry: null,
            _historyTraversalQueue: Set(0) {},
            [Symbol(wrapper)]: [History]
          },
          _activeNodeIterators: [],
          _activeNodeIteratorsMax: 10,
          _referrer: '',
          _lastModified: '08/02/2020 11:32:02',
          _queue: ResourceQueue { paused: false, tail: null },
          _customResourceLoader: undefined,
          _pool: { maxSockets: 6, 'http:': [Agent] },
          _agentOptions: { keepAlive: true, keepAliveMsecs: 115000 },
          _strictSSL: true,
          _proxy: undefined,
          _requestManager: RequestManager { openedRequests: [] },
          readyState: 'complete',
          _lastFocusedElement: null,
          _nwmatcher: {
            ACCEPT_NODE: 'r[r.length]=c[k];if(f&&false===f(c[k]))break main;else continue main;',
            byId: [Function: byId],
            match: [Function: match],
            first: [Function: first],
            select: [Function: select],
            compile: [Function: compile],
            contains: [Function (anonymous)],
            configure: [Function: configure],
            getAttribute: [Function (anonymous)],
            hasAttribute: [Function (anonymous)],
            setCache: [Function: FN],
            shortcuts: [Function: FN],
            loadResults: [Function: FN],
            saveResults: [Function: FN],
            emit: [Function: emit],
            Config: [Object],
            Snapshot: [Object],
            Operators: [Object],
            Selectors: {},
            Tokens: [Object],
            Version: 'nwmatcher-1.4.4',
            registerOperator: [Function: registerOperator],
            registerSelector: [Function: registerSelector]
          },
          [Symbol(DOM SymbolTree)]: SymbolTreeNode {
            parent: null,
            previousSibling: null,
            nextSibling: null,
            firstChild: [HTMLHtmlElementImpl],
            lastChild: [HTMLHtmlElementImpl],
            childrenVersion: 1,
            childIndexCachedUpTo: null,
            cachedIndex: -1,
            cachedIndexVersion: NaN
          },
          [Symbol(wrapper)]: [Circular *4]
        }
      },
      [Symbol(impl)]: EventTargetImpl {
        _eventListeners: [Object: null prototype] {},
        [Symbol(wrapper)]: [Circular *5]
      }
    },
    onreadystatechange: [Function: handleLoad] {
      [Symbol(inline event listener wrapper)]: [Function (anonymous)]
    },
    [Symbol(impl)]: EventTargetImpl {
      _eventListeners: [Object: null prototype] {},
      [Symbol(wrapper)]: [Circular *6],
      [Symbol(DOM SymbolTree)]: SymbolTreeNode {
        parent: null,
        previousSibling: null,
        nextSibling: null,
        firstChild: null,
        lastChild: null,
        childrenVersion: 0,
        childIndexCachedUpTo: null,
        cachedIndex: -1,
        cachedIndexVersion: NaN
      }
    },
    [Symbol(flag)]: {
      synchronous: false,
      withCredentials: false,
      mimeType: null,
      auth: null,
      method: 'GET',
      responseType: '',
      requestHeaders: { accept: 'application/json, text/plain, */*' },
      referrer: 'http://localhost/',
      uri: 'http://localhost/api/values/current',
      timeout: 0,
      body: undefined,
      formData: false,
      preflight: false,
      requestManager: RequestManager { openedRequests: [] },
      pool: {
        maxSockets: 6,
        'http:': Agent {
          _events: [Object: null prototype] {
            free: [Function (anonymous)],
            newListener: [Function: maybeEnableKeylog]
          },
          _eventsCount: 2,
          _maxListeners: undefined,
          defaultPort: 80,
          protocol: 'http:',
          options: { keepAlive: true, keepAliveMsecs: 115000, path: null },
          requests: {},
          sockets: {},
          freeSockets: {},
          keepAliveMsecs: 115000,
          keepAlive: true,
          maxSockets: 6,
          maxFreeSockets: 256,
          scheduling: 'fifo',
          maxTotalSockets: Infinity,
          totalSocketCount: 0,
          [Symbol(kCapture)]: false
        }
      },
      agentOptions: { keepAlive: true, keepAliveMsecs: 115000 },
      strictSSL: true,
      proxy: undefined,
      cookieJar: CookieJar {
        enableLooseMode: true,
        store: MemoryCookieStore { idx: {} }
      },
      encoding: 'UTF-8',
      origin: 'http://localhost',
      userAgent: 'Node.js (linux; U; rv:v14.5.0) AppleWebKit/537.36 (KHTML, like Gecko)'
    },
    [Symbol(properties)]: {
      beforeSend: false,
      send: false,
      timeoutStart: 0,
      timeoutId: 0,
      timeoutFn: null,
      client: null,
      responseHeaders: {},
      filteredResponseHeaders: [],
      responseBuffer: null,
      responseCache: null,
      responseTextCache: null,
      responseXMLCache: null,
      responseURL: '',
      readyState: 0,
      status: 0,
      statusText: '',
      error: '',
      uploadComplete: true,
      abortError: true,
      cookieJar: CookieJar {
        enableLooseMode: true,
        store: MemoryCookieStore { idx: {} }
      },
      requestBuffer: null,
      requestCache: null,
      origin: 'http://localhost'
    }
  },
  response: undefined
}
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! client@0.1.0 test: `react-scripts test --env=jsdom`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the client@0.1.0 test script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2020-08-02T11_32_04_491Z-debug.log
